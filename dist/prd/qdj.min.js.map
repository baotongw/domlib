{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/qdj/core.js","src/scripts/qdj/modules/dom-index.js","src/scripts/qdj/modules/dom/dom-access.js","src/scripts/qdj/modules/dom/dom-attr.js","src/scripts/qdj/modules/dom/dom-class.js","src/scripts/qdj/modules/dom/dom-prop.js","src/scripts/qdj/modules/dom/dom-util.js","src/scripts/qdj/modules/dom/dom-val.js","src/scripts/qdj/qdj.js","src/scripts/qdj/tools/base.js","src/scripts/qdj/tools/extend.js","src/scripts/qdj/tools/index.js","src/scripts/qdj/tools/meta.js","src/scripts/qdj/tools/support.js","src/scripts/qdj/tools/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Q","selector","context","root","Inner","version","guid","hookKey","math","random","replace","ctx","this","document","domNodes","querySelectorAll","nodeType","prototype","window","exec","key","value","len","arguments","args","isGet","isKeyPairs","_core2","default","isObject","isEmptyObject","isValidString","isBaseType","attr","_core","_getAttr","nodeLen","node","isDomNode","getAttribute","_setAttr","setAttribute","isUndefined","extend","removeAttr","_this","attrs","split","forEach","removeAttribute","_wrapper","className","existClass","classArr","join","_toggle","cls","indexOf","push","splice","addClass","isValid","removeClass","toggleClass","flag","isBoolean","propFix","for","class","prop","toLowerCase","undefined","_getProp","_setProp","_domAccess2","domUtil","type","isNumeric","isElementNode","nodeName","valPresets","option","get","val","_utils2","stripAndCollapse","select","options","selected","selectedIndex","isSingleSelect","ret","max","parent","parentNode","disabled","vlaue","set","hasMatch","values","makeArray","tag","isArray","checked","_support2","checkOn","_getPreset","_setVal","isFunction","preset","map","v","_getVal","removeReturn","_meta","class2type","base","isWindow","obj","_typeof","isNaN","isString","arr","Array","toString","func","hasOwn","isPlainObject","constructor","proto","getProto","Object","err","isArrayLike","helper","merge","bi","ei","results","rets","each","item","_extend","isDeep","property","baseProperty","basePropertyType","hasOwnProperty","index","getPrototypeOf","support","createHTMLDocument","body","implementation","innerHTML","childNodes","patterns","rnotHtmlWhite","rreturn","utils","match"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ,iECSA,IAEIK,EAAI,SAASC,EAAUC,EAASC,GAEhC,OADe,IAAIC,EAAMH,EAAUC,EAASC,IAIhDH,EAAEK,QAAS,QACXL,EAAEM,KAAO,EACTN,EAAEO,QAAU,OAASP,EAAEK,QAAUG,KAAKC,UAAUC,QAAQ,MAAO,IAE/D,IAAIN,EAAQ,SAASH,EAAUU,EAAKR,GAChC,IAAIF,EACA,OAAOW,KAGX,IAAIV,EAAUS,GAAOE,SACjBC,OAAA,EAEJ,GAAuB,iBAAbb,GAAyBA,EAASJ,OAAQ,CAChDiB,EAAWZ,EAAQa,iBAAiBd,GACpCW,KAAKX,SAAWA,EAChBW,KAAKf,OAASiB,EAASjB,OACvBe,KAAKV,QAAUA,EAEf,IAAI,IAAIZ,EAAI,EAAGA,EAAIsB,KAAKf,OAAQP,IAC5BsB,KAAKtB,GAAKwB,EAASxB,QAEjBW,EAASe,WAEfJ,KAAK,GAAKX,EACVW,KAAKf,OAAS,IAIdG,EAAEa,UAEVT,EAAMa,UAAYjB,EAAEiB,UAEpBC,OAAOlB,EAAIA,YAEIA,IAGXI,MAAAA,uCCrDJf,EAAQ,kBACRA,EAAQ,mBACRA,EAAQ,kBACRA,EAAQ,kBACRA,EAAQ,qMCJR,wDAAAA,EAAA,yBAGA,SAAgB8B,GAEZ,OAAO,SAASC,EAAKC,GACjB,IAAIC,EAAMC,UAAU1B,OAChB2B,OAAA,EACAC,GAAQ,EACRC,GAAa,EAEjB,GAAW,IAARJ,EACC,OAAOV,KAGX,GAAW,IAARU,EAEC,GAAGK,EAAAC,QAAEC,SAAST,GAAM,CAEhB,GAAGO,EAAAC,QAAEE,cAAcV,GACf,OAAOR,KAGXY,EAAOJ,EACPK,GAAQ,EACRC,GAAa,MACV,CAAA,IAAIC,EAAAC,QAAEG,cAAcX,GACvB,OAAOR,KAEPa,GAAQ,EAKhB,KAAW,IAARH,GAAeK,EAAAC,QAAEI,WAAWZ,IAASO,EAAAC,QAAEI,WAAWX,IACjD,OAAOT,KAMX,GAHcA,KAAKf,OAGhB4B,EACC,OAAON,EAAKvB,KAAKgB,KAAMQ,GAEvB,GAAGM,EACC,IAAI,IAAIO,KAAQT,EACZL,EAAKvB,KAAKgB,KAAMqB,EAAMT,EAAKS,SAG/Bd,EAAKvB,KAAKgB,KAAMQ,EAAKC,GAI7B,OAAOT,6GCrDf,IAAAsB,EAAA7C,EAAA,qBAGI8C,EAAW,SAASf,GACpB,IAAI9B,EAAI,EAAG8C,EAAUxB,KAAKf,OACtBwC,OAAA,EAEJ,IAAI/C,EAAGA,EAAI8C,EAAS9C,IAGhB,GAFA+C,EAAOzB,KAAKtB,GAERqC,EAAAC,QAAEU,UAAUD,GAIhB,OAAOA,EAAKE,aAAanB,IAI7BoB,EAAW,SAASpB,EAAKC,GACzB,IAAI/B,OAAA,EAAG+C,OAAA,EAAMD,EAAUxB,KAAKf,OAE5B,IAAIP,EAAI,EAAGA,EAAI8C,EAAS9C,IACpB+C,EAAOzB,KAAKtB,GAERqC,EAAAC,QAAEU,UAAUD,IAIhBA,EAAKI,aAAarB,EAAKC,EAAQ,IAGnC,OAAOT,MAcPqB,GAAO,IA5CX5C,EAAA,iBA4CWuC,SAXC,SAASR,EAAKC,GACtB,OAAGM,EAAAC,QAAEc,YAAYrB,GACNc,EAASvC,KAAKgB,KAAMQ,GAGxBoB,EAAS5C,KAAKgB,KAAMQ,EAAKC,KAgCpCa,EAAA9B,MAAMa,UAAU0B,QACZV,KAAAA,EACAW,WAzBa,SAASxB,GAAK,IAAAyB,EAAAjC,KAmB3B,OAlBGe,EAAAC,QAAEG,cAAcX,IAAM,WAKrB,IAAI,IAJA0B,EAAQ1B,EAAI2B,MAAM,KAClBzB,EAAMuB,EAAKhD,OACXwC,OAAA,EAEI/C,EAAI,EAAGA,EAAIgC,EAAKhC,IACpB+C,EAAOQ,EAAKvD,GAERqC,EAAAC,QAAEU,UAAUD,IAIhBS,EAAME,QAAQ,SAAAf,GACVI,EAAKY,gBAAgBhB,KAbR,GAkBlBrB,4ECjEX,SAASsC,EAAS/B,GACd,OAAO,SAASgC,GAEZ,IAAIA,EACA,OAAOvC,KAKX,IAAI,IAFAwB,EAAUxB,KAAKf,OAEXP,EAAI,EAAGA,EAAI8C,EAAS9C,IAAK,CAC7B,IAAI+C,EAAOzB,KAAKtB,GACZ8D,EAAaf,EAAKc,UAClBE,EAAWlC,EAAKiC,EAAYD,GAEnB,OAAbE,IAAsBhB,EAAKc,UAAYE,EAASC,KAAK,MAGzD,OAAO1C,MAnBf,IAAAsB,EAAA7C,EAAA,qEAyEIkE,EAAUL,EAVK,SAASE,EAAYD,GACpC,IAAIE,EAAWD,EAAaA,EAAWL,MAAM,QAM7C,OAJAI,EAAUJ,MAAM,KAAKC,QAAQ,SAACQ,EAAKlE,IACJ,IAA3B+D,EAASI,QAAQD,GAAcH,EAASK,KAAKF,GAAOH,EAASM,OAAOrE,EAAG,KAGpE+D,IAKPO,EAAWV,EAnDC,SAASE,EAAYD,GACjC,IAAIE,KACAQ,GAAU,EAgBd,OAdIT,GAIAC,EAAWD,EAAWL,MAAM,KAE5BI,EAAUJ,MAAM,KAAKC,QAAQ,SAAAQ,IACK,IAA3BH,EAASI,QAAQD,KAChBK,GAAU,EACVR,EAASK,KAAKF,QARtBK,GAAU,EACVR,EAASK,KAAKP,IAYXU,EAAUR,EAAW,OAkC5BS,EAAcZ,EA/BC,SAASE,EAAYD,GACpC,IAAIE,KACAQ,GAAU,EAad,OAXGT,IACCC,EAAWD,EAAWL,MAAM,KAE5BI,EAAUJ,MAAM,KAAKC,QAAQ,SAACQ,EAAKlE,GAC5B+D,EAASI,QAAQD,IAAQ,IACxBK,GAAU,EACVR,EAASM,OAAOrE,EAAG,OAKxBuE,EAAUR,EAAW,OAoChCnB,EAAA9B,MAAMa,UAAU0B,QACZiB,SAAAA,EACAE,YAAAA,EACAC,YAtBc,SAASZ,EAAWa,GAClC,GAAGrC,EAAAC,QAAEqC,UAAUD,GACX,OAAOA,EAAOJ,EAAST,GAAaW,EAAYX,GAGpDI,EAAQ3D,KAAKgB,KAAMuC,4GClFvB,IAAAjB,EAAA7C,EAAA,yBACAA,EAAA,iBAGAsC,EAAAC,QAAEsC,SACEC,IAAO,UACPC,MAAS,cAIZ,WACA,WACA,YACA,cACA,cACA,UACA,UACA,SACA,cACA,mBACCpB,QAAQ,SAAAqB,GACN1C,EAAAC,QAAEsC,QAAQG,EAAKC,oBAAfC,IAGJ,IAAIC,EAAW,SAASpD,GACpB,IAAI9B,EAAI,EAAG8C,EAAUxB,KAAKf,OACtBwC,OAAA,EAEJ,IAAI/C,EAAGA,EAAI8C,EAAS9C,IAGhB,GAFA+C,EAAOzB,KAAKtB,GAERqC,EAAAC,QAAEU,UAAUD,GAIhB,OAAOA,EAAKjB,IAIhBqD,EAAW,SAASrD,EAAKC,GACzB,IAAI/B,OAAA,EAAG+C,OAAA,EAAMD,EAAUxB,KAAKf,OAI5B,IAFAuB,EAAMO,EAAAC,QAAEsC,QAAQ9C,IAAQA,EAEpB9B,EAAI,EAAGA,EAAI8C,EAAS9C,IACpB+C,EAAOzB,KAAKtB,GAERqC,EAAAC,QAAEU,UAAUD,KAIhBA,EAAKjB,GAAOC,IAmBhBgD,GAAO,EAAAK,EAAA9C,SAfC,SAASR,EAAKC,GACtB,OAAGM,EAAAC,QAAEc,YAAYrB,GACNmD,EAAS5E,KAAKgB,KAAMQ,GAGxBqD,EAAS7E,KAAKgB,KAAMQ,EAAKC,KAapCa,EAAA9B,MAAMa,UAAU0B,QACZ0B,KAAAA,2DC1EJ,aAEA,wDAAAhF,EAAA,eAEIsF,GACArC,UAAW,SAASD,GAChB,IAAIuC,EAAOvC,GAAQA,EAAKrB,SAExB,OAAyB,IAAtBW,EAAAC,QAAEiD,UAAUD,IAA4B,IAATA,GAAuB,IAATA,GAAuB,IAATA,GAMlEE,cAAe,SAASzC,GAGpB,OAAgB,KAFLA,GAAQA,EAAKrB,WAI5B+D,SAAU,SAAS1C,GACf,OAAOA,EAAK0C,SAAST,gBAI7B3C,EAAAC,QAAEe,OAAOgC,yGCxBT,IAAAzC,EAAA7C,EAAA,0BACAA,EAAA,mBACAA,EAAA,6BACAA,EAAA,sBAEAsC,EAAAC,QAAEoD,YACEC,QACIC,IAAK,SAAS7C,GACV,IAAI8C,GAAM,EAAAxD,EAAAC,SAAES,GAAMJ,KAAK,SAEvB,OAAc,MAAPkD,EAAcA,EAAMC,EAAAxD,QAAMyD,iBAAiBF,KAG1DG,QACIJ,IAAK,SAAS7C,GAEV,IAAIkD,EAAUlD,EAAKkD,QACfC,EAAWnD,EAAKoD,cAChBC,EAA+B,eAAdrD,EAAKuC,KACtBe,EAAMD,EAAiB,QACvBE,EAAMF,EAAiBF,EAAW,EAAID,EAAQ1F,OAC9CP,OAAA,EAAG2F,OAAA,EAAQ5D,OAAA,EAAmBwE,OAAA,EAUlC,IALIvG,EADDkG,EAAW,EACNI,EAEAF,EAAiBF,EAAW,EAG9BlG,EAAIsG,EAAKtG,IAIX,GAHA2F,EAASM,EAAQjG,IAGdiG,EAAQC,UAAYlG,IAAMkG,KACzBK,EAASZ,EAAOa,YAIE,KAHLb,EAAOc,UAAmC,aAAvBpE,EAAAC,QAAEmD,SAASc,IAA0BA,EAAOE,WAGnD,CAGrB,GAFA1E,GAAQ,EAAAM,EAAAC,SAAEqD,GAAQE,MAEfO,EACC,OAAOM,MAGXL,EAAIjC,KAAKrC,GAKrB,OAAOsE,GAEXM,IAAK,SAAS5D,EAAMhB,GAWhB,IANA,IAAI6E,GAAW,EACXX,EAAUlD,EAAKkD,QACfY,EAASxE,EAAAC,QAAEwE,UAAU/E,GACrBC,EAAMiE,EAAQ1F,OACdP,EAAI,EAAG2F,OAAA,EAEL3F,EAAIgC,EAAKhC,MACX2F,EAASM,EAAQjG,IAEPkG,SAAWW,EAAO1C,QAAQ9B,EAAAC,QAAEoD,WAAWC,OAAOC,IAAID,KAAY,KACpEiB,GAAW,GAQnB,OAJgB,IAAbA,IACC7D,EAAKoD,eAAiB,GAGnBU,MAKlB,QAAS,YAAYnD,QAAQ,SAAAqD,GAC1B1E,EAAAC,QAAEoD,gBAAFT,IACI0B,IAAK,SAAS5D,EAAMhB,GAChB,GAAGM,EAAAC,QAAE0E,QAAQjF,GACT,OAAQgB,EAAKkE,QAAUlF,EAAMoC,SAAQ,EAAA9B,EAAAC,SAAES,GAAM8C,QAAU,IAM/DqB,EAAA5E,QAAQ6E,UACR9E,EAAAC,QAAEoD,gBAAFT,GAAmBW,IAAM,SAAS7C,GAC9B,OAAsC,OAA/BA,EAAKE,aAAa,SAAoB,KAAOF,EAAKhB,UAKrE,IAAIqF,EAAa,SAASrE,GACtB,OAAOV,EAAAC,QAAEoD,WAAW3C,EAAKuC,OAASjD,EAAAC,QAAEoD,WAAW3C,EAAK0C,SAAST,gBAK7DqC,EAAU,SAAStF,GACnB,IAAI/B,EAAI,EACJgC,EAAMV,KAAKf,OACX+G,EAAajF,EAAAC,QAAEgF,WAAWvF,GAC1BgB,OAAA,EAAMwE,OAAA,EAAQ1B,OAAA,EAElB,GAAIyB,GAAejF,EAAAC,QAAEI,WAAWX,GAIhC,IAAI/B,EAAGA,EAAIgC,EAAKhC,IAIS,KAHrB+C,EAAOzB,KAAKtB,IAGJ0B,WAME,OAFVmE,EAAMyB,EAAavF,EAAMzB,KAAKyC,EAAM/C,GAAG,EAAAqC,EAAAC,SAAES,GAAM8C,OAAS9D,GAGpD8D,EAAM,GACAxD,EAAAC,QAAEiD,UAAUxD,GAElB8D,GAAO,GACDxD,EAAAC,QAAE0E,QAAQjF,KAGhB8D,EAAM9D,EAAMyF,IAAI,SAAAC,GAAA,OAAU,MAALA,EAAY,GAAKA,EAAI,OAG9CF,EAASH,EAAWrE,KAELwE,EAAOZ,UAAkC1B,IAA1BsC,EAAOZ,IAAI5D,EAAM8C,KAC3C9C,EAAKhB,MAAQ8D,KAKrB6B,EAAU,WACV,IAAI3E,EAAOzB,KAAK,GACZiG,OAAA,EACAlB,OAAA,EAEJ,GAAGtD,EAGC,OAFAwE,EAASH,EAAWrE,KAEPwE,EAAO3B,UAGLX,KAFXoB,EAAMkB,EAAO3B,IAAI7C,EAAM,UAGZsD,EAMG,iBAFlBA,EAAMtD,EAAKhB,OAGA+D,EAAAxD,QAAMqF,aAAatB,GAGhB,MAAPA,EAAc,GAAKA,GAiBlCzD,EAAA9B,MAAMa,UAAU0B,QACZwC,IAVM,SAAS9D,GACf,OAAGM,EAAAC,QAAEc,YAAYrB,GACN2F,EAAQpH,KAAKgB,MAGjB+F,EAAQ/G,KAAKgB,KAAMS,0HCnL9BhC,EAAQ,UACRA,EAAQ,iBACRA,EAAQ,qGCFR,kUAEAA,EAAA,YACA6H,EAAA7H,EAAA,UAEAsC,EAAAC,QAAEuF,eAGD,UAAW,SAAU,SAAU,WAAY,QAAS,OAAQ,SAAU,SAAU,QAAS,SAAU,WAAWnE,QAAQ,SAAAQ,GACtH7B,EAAAC,QAAEuF,WAAY,WAAa3D,EAAM,KAAQA,EAAIc,gBAG9C,IAAI8C,GACAC,SAAU,SAASC,GACf,OAAc,MAAPA,GAAeA,IAAQA,EAAIpG,QAEtC2D,UAAW,SAASyC,GAChB,IAAI1C,OAAA,IAAc0C,EAAd,YAAAC,EAAcD,GAElB,MAAgB,WAAT1C,GAA+B,WAATA,IAAsB4C,MAAMF,EAAMA,IAEnEG,SAAU,SAASH,GACf,MAAsB,iBAARA,GAElBvF,cAAe,SAASuF,GACpB,MAAsB,iBAARA,GAAoBA,EAAIzH,QAE1CoE,UAAW,SAASqD,GAChB,MAAsB,kBAARA,GAElBtF,WAAY,SAASsF,GACjB,OAAO3F,EAAAC,QAAEiD,UAAUyC,IAAQ3F,EAAAC,QAAE6F,SAASH,IAAQ3F,EAAAC,QAAEqC,UAAUqD,IAE9DhB,QAAS,SAASoB,GACd,OAAGC,MAAMrB,QACEqB,MAAMrB,QAAQoB,GAGlBA,GAA8B,mBAAvBR,EAAAU,SAAShI,KAAK8H,IAEhCd,WAAY,SAASiB,GACjB,MAAuB,mBAATA,GAElBhG,SAAU,SAASyF,GACf,OAAOA,GAA8B,oBAAvBJ,EAAAU,SAAShI,KAAK0H,IAEhC5E,YAAa,SAAS4E,GAClB,YAAsB,IAARA,GAGlBxF,cAAe,SAASwF,GACpB,IAAI3B,GAAM,EAEV,IAAIhE,EAAAC,QAAEC,SAASyF,GACX,OAAO,EAGX,IAAI,IAAIlG,KAAOkG,EACX,GAAGJ,EAAAY,OAAOlI,KAAK0H,EAAKlG,GAAM,CACtBuE,GAAM,EACN,MAIR,OAAOA,GAGXoC,cAAe,SAAST,GACpB,IACIU,OAAA,EAEJ,IACI,IAAIC,GAAQ,EAAAf,EAAAgB,UAASZ,GAErB,OAAIW,GAK0B,mBAD9BD,EAAcd,EAAAY,OAAOlI,KAAKqI,EAAO,gBAAkBA,EAAMD,cACbA,IAAgBG,OAAOlH,UAAU+G,YAC/E,MAAMI,IAER,OAdU,GAsBdC,YAAa,SAASf,GAClB,GAAGA,aAAA3F,EAAAC,QACC,OAAO,EAGX,IAAIN,IAAQgG,GAAOJ,EAAAY,OAAOlI,KAAK0H,EAAK,WAAaA,EAAIzH,OACjD+E,EAAOjD,EAAAC,QAAEgD,KAAK0C,GAElB,OAAG3F,EAAAC,QAAEgF,WAAWU,KAAQ3F,EAAAC,QAAEyF,SAASC,KAInB,UAAT1C,GAA4B,IAARtD,GAA4B,iBAARA,GAAoBA,EAAM,GAAKgG,EAAIhG,EAAM,KAG5FsD,KAAM,SAAS0C,GACX,GAAU,MAAPA,EACC,OAAOA,EAAM,GAGjB,IAAIxI,OAAA,IAAWwI,EAAX,YAAAC,EAAWD,GAGf,MAFgB,WAANxI,GAAwB,aAANA,EAAmB6C,EAAAC,QAAEuF,WAAWD,EAAAU,SAAShI,KAAK0H,KAAS,SAAWxI,IAMlGwJ,GAEAC,MAAO,SAASnB,EAAMzE,GAKlB,IAJA,IAAIrB,EAAMqB,EAAO9C,QAAU,EACvB2I,EAAKpB,EAAKvH,QAAU,EACpB4I,EAAK,EAEHA,EAAKnH,EAAKmH,IACZrB,EAAKoB,KAAQ7F,EAAO8F,GAIxB,OADArB,EAAKvH,OAAS2I,EACPpB,GAEXhB,UAAW,SAASsB,EAAKgB,GACrB,IAAIC,EAAOD,MAWX,OATU,MAAPhB,IAEI/F,EAAAC,QAAEyG,YAAYX,GACb/F,EAAAC,QAAE2G,MAAMI,EAAqB,iBAARjB,GAAoBA,GAAOA,GAEhDiB,EAAKjF,KAAKgE,IAIXiB,GAEXC,KAAM,SAAStB,EAAKO,GAChB,IAAIgB,OAAA,EAAMlD,OAAA,EAEV,GAAIhE,EAAAC,QAAEgF,WAAWiB,GAIjB,GAAGlG,EAAAC,QAAEC,SAASyF,GACV,IAAI,IAAIlG,KAAOkG,GACA,IAAR3B,IACI,EAAAuB,EAAAY,QAAOR,EAAKlG,KACXyH,EAAOvB,EAAIlG,GACXuE,EAAMkC,EAAKjI,KAAKiJ,EAAMzH,EAAKkG,SAIpC,GAAG3F,EAAAC,QAAEyG,YAAYR,GACpB,IAAI,IAAIvI,EAAI,EAAGA,EAAIgI,EAAIzH,SACnBgJ,EAAOvB,EAAIhI,IAIA,KAFXqG,EAAMkC,EAAKjI,KAAKiJ,EAAMvJ,EAAGgI,KAHEhI,QAa3CqC,EAAAC,QAAEe,OAAOyE,GACTzF,EAAAC,QAAEe,OAAO2F,aAEMlB,+QCzKflF,EAAA7C,EAAA,WAgCIyJ,EAAU,SAAVA,EAAoB1B,EAAME,EAAKyB,GAC/B,IAAIC,EACAC,EACAC,EAEJ,IAAK,IAAI9H,KAAOkG,EACZ,GAAIA,EAAI6B,eAAe/H,GAAM,CAIzB,GAHA4H,EAAW1B,EAAIlG,IACf6H,EAAe7B,EAAKhG,MAEC4H,EACjB,SAGJ,IAAKD,EAAQ,CACT3B,EAAKhG,GAAOkG,EAAIlG,GAChB,SAKJ,OAFA8H,OAAA,IAA0BD,EAA1B,YAAA1B,EAA0B0B,QAE1B,IAAeD,EAAf,YAAAzB,EAAeyB,IACX,IAAK,SAEDF,EADAG,EAAoC,WAArBC,EAAgCD,KACzBD,EAAUD,GAChC,MACJ,IAAK,QAEDD,EADAG,EAAoC,UAArBC,EAA+BD,KACxBD,EAAUD,GAChC,MACJ,QACI3B,EAAKhG,GAAOkG,EAAIlG,IAMhC,OAAOgG,0DAGXxF,QAAEe,OAAST,EAAA9B,MAAMa,UAAU0B,OArEd,SAAUoG,GACnB,IACI3B,EAAO7F,UAAU,GACjB6H,EAAQ,EACRvJ,EAAS0B,UAAU1B,OAkBvB,IAhBsB,kBAAXkJ,IACPK,IACAhC,EAAO7F,UAAU,IAIO,oBAAxBqG,SAAShI,KAAKwH,IAA+C,mBAATA,IACpDA,MAIAgC,IAAUvJ,IACVuH,EAAOxG,KACPwI,KAGEA,EAAQvJ,EAAQuJ,IAClBN,EAAQ1B,EAAM7F,UAAU6H,IAG5B,OAAOhC,oDCrCX/H,EAAQ,YACRA,EAAQ,0HCFR,IAAMiI,KAGAM,EAAWO,OAAOlH,UAAU2G,SAC5BE,EAASR,EAAI6B,eACbjB,EAAWC,OAAOkB,eACPnB,EAASZ,GACYU,YAAYJ,aAG9CA,SAAAA,IACAE,OAAAA,IACAI,SAAAA,yFCZJ,IAAIoB,KAEJA,EAAQC,mBAAsB,WAC1B,IAAIC,EAAO3I,SAAS4I,eAAeF,mBAAmB,IAAIC,KAG1D,OADAA,EAAKE,UAAY,6BACiB,IAA3BF,EAAKG,WAAW9J,OAJG,aAgCfyJ,yFClCf,IAAMM,GAIFC,cAAe,oBACfC,QAAS,OAGPC,GACF1E,iBAAkB,SAAShE,GAEvB,OADYA,EAAM2I,MAAMJ,EAASC,oBACpBvG,KAAK,MAEtB2D,aAAc,SAAS5F,GACnB,OAAOA,EAAMX,QAAQkJ,EAASE,QAAS,gBAIhCC","file":"qdj.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * @Author: baotong.wang \n * @Date: 2017-08-22 21:55:51 \n * @Last Modified by: baotong.wang\n * @Last Modified time: 2017-09-04 21:47:05\n * @Description: 度假前端库核心文件\n * @Dependence: None \n */\n\nlet qRoot\n\nlet Q = function(selector, context, root) {\n    let instance = new Inner(selector, context, root)\n    return instance\n}\n\nQ.version= '0.0.1'\nQ.guid = 1\nQ.hookKey = 'qdj' + (Q.version + math.random()).replace(/\\D/g, '')\n\nlet Inner = function(selector, ctx, root) {\n    if(!selector) {\n        return this\n    }\n\n    let context = ctx || document\n    let domNodes\n\n    if(typeof selector === 'string' && selector.length) {\n        domNodes = context.querySelectorAll(selector)\n        this.selector = selector\n        this.length = domNodes.length\n        this.context = context\n\n        for(let i = 0; i < this.length; i++) {\n            this[i] = domNodes[i]\n        }\n    } else if(selector.nodeType) {\n        // 传入的是一个dom节点\n        this[0] = selector\n        this.length = 1\n    }\n}\n\nqRoot = Q(document)\n\nInner.prototype = Q.prototype\n\nwindow.Q = Q\n\nexport default Q\n\nexport {\n    Inner\n}","require('./dom/dom-util')\nrequire('./dom/dom-class')\nrequire('./dom/dom-attr')\nrequire('./dom/dom-prop')\nrequire('./dom/dom-val')","import Q, {Inner} from '../../core' \n\n// 增加一个判断设置对象属性的公共函数，避免函数冗余\nfunction access(exec) {\n    \n    return function(key, value) {\n        let len = arguments.length\n        let args\n        let isGet = false\n        let isKeyPairs = false\n    \n        if(len === 0) {\n            return this\n        }\n    \n        if(len === 1) {\n            // 支持通过object批量修改多个属性\n            if(Q.isObject(key)) {\n                // 空对象忽略\n                if(Q.isEmptyObject(key)) {\n                    return this\n                }\n    \n                args = key\n                isGet = false\n                isKeyPairs = true\n            } else if(!Q.isValidString(key)) {\n                return this\n            } else {\n                isGet = true\n            }\n        }\n    \n        // 如果是两个字符串那必须都得是string\n        if(len === 2 && (!Q.isBaseType(key) || !Q.isBaseType(value))) {\n            return this\n        }\n    \n        let nodeLen = this.length\n        let i, node\n        \n        if(isGet) {\n            return exec.call(this, key)\n        } else {\n            if(isKeyPairs) {\n                for(let attr in args) {\n                    exec.call(this, attr, args[attr])\n                }\n            } else {\n                exec.call(this, key, value)\n            }\n        }\n\n        return this\n    }\n}\n\nexport default access","import Q, {Inner} from '../../core' \nimport access from './dom-access'\n\nlet _getAttr = function(key) {\n    let i = 0, nodeLen = this.length\n    let node\n\n    for(i; i < nodeLen; i++) {\n        node = this[i]\n\n        if(!Q.isDomNode(node)) {\n            continue\n        }\n\n        return node.getAttribute(key)\n    }\n}\n\nlet _setAttr = function(key, value) {\n    let i, node, nodeLen = this.length\n\n    for(i = 0; i < nodeLen; i++ ) {\n        node = this[i]\n        \n        if(!Q.isDomNode(node)) {\n            continue\n        }\n        \n        node.setAttribute(key, value + '')\n    } \n    \n    return this\n}\n\nlet _attr = function(key, value) {\n    if(Q.isUndefined(value)) {\n        return _getAttr.call(this, key)\n    }\n\n    return _setAttr.call(this, key, value)\n}\n\n// 支持的参数类型：\n// 1： key-value\n// 2： object: {key1: value1, key2: value2}\nlet attr = access(_attr)\n\n// 删除一个或多个属性，多个属性空格隔开\nlet removeAttr = function(key) {\n    if(Q.isValidString(key)) {\n        let attrs = key.split(' ')\n        let len = this.length\n        let node\n        \n        for(let i = 0; i < len; i++) {\n            node = this[i]\n\n            if(!Q.isDomNode(node)) {\n                continue\n            }\n\n            attrs.forEach(attr => {\n                node.removeAttribute(attr)\n            })\n        }\n    }\n\n    return this\n}\n\n// 扩展到对象实例\nInner.prototype.extend({\n    attr,\n    removeAttr\n})","import Q, {Inner} from '../../core'\n\nfunction _wrapper(exec) {\n    return function(className) {\n        // 这里的this指向Q对象\n        if(!className) {\n            return this\n        }\n    \n        let nodeLen = this.length\n    \n        for(let i = 0; i < nodeLen; i++) {\n            let node = this[i]\n            let existClass = node.className\n            let classArr = exec(existClass, className)\n    \n            classArr !== null && (node.className = classArr.join(' '))\n        }\n    \n        return this\n    }\n}\n\n// className: 待添加的class，可以是多个，以空格区分\nlet _addClass = function(existClass, className) {\n    let classArr = []\n    let isValid = false\n\n    if(!existClass) {\n        isValid = true\n        classArr.push(className)\n    } else {\n        classArr = existClass.split(' ')\n\n        className.split(' ').forEach(cls => {\n            if(classArr.indexOf(cls) === -1) {\n                isValid = true\n                classArr.push(cls)\n            }\n        })\n    }\n\n    return isValid ? classArr : null\n}\n\nlet _removeClass = function(existClass, className) {\n    let classArr = []\n    let isValid = false\n\n    if(existClass) {\n        classArr = existClass.split(' ')\n\n        className.split(' ').forEach((cls, i) => {\n            if(classArr.indexOf(cls) > -1) {\n                isValid = true\n                classArr.splice(i, 1)\n            }\n        })\n    }\n\n    return isValid ? classArr : null\n}\n\nlet _toggleClass = function(existClass, className) {\n    let classArr = existClass ? existClass.split(' ') : []\n\n    className.split(' ').forEach((cls, i) => {\n        classArr.indexOf(cls) === -1 ? classArr.push(cls) : classArr.splice(i, 1)\n    })\n\n    return classArr\n}\n\nlet _toggle = _wrapper(_toggleClass)\n\nlet addClass = _wrapper(_addClass)\nlet removeClass = _wrapper(_removeClass)\nlet toggleClass = function(className, flag) {\n    if(Q.isBoolean(flag)) {\n        return flag ? addClass(className) : removeClass(className)\n    }\n\n    _toggle.call(this, className)\n}\n\nlet hasClass = function(className) {\n    // 这里的this指向Q对象\n    if(!className || this.length === 0) {\n        return false\n    }\n\n    let baseClassName = this[0].baseClassName\n    return baseClassName.indexOf(className) > -1\n}\n\n// 扩展到对象实例\nInner.prototype.extend({\n    addClass,\n    removeClass,\n    toggleClass\n})","import Q, {Inner} from '../../core' \nimport access from './dom-access'\n\n// 预置部分习惯使用的属性名映射\nQ.propFix = {\n    'for': 'htmlFor',\n    'class': 'className'\n};\n// 这里预处理可能传入的全小写属性\n[\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n].forEach(prop => {\n    Q.propFix[prop.toLowerCase()] = this\n})\n\nlet _getProp = function(key) {\n    let i = 0, nodeLen = this.length\n    let node\n\n    for(i; i < nodeLen; i++) {\n        node = this[i]\n\n        if(!Q.isDomNode(node)) {\n            continue\n        }\n\n        return node[key]\n    }\n}\n\nlet _setProp = function(key, value) {\n    let i, node, nodeLen = this.length\n    // 这里预处理可能传入的全小写属性\n    key = Q.propFix[key] || key\n\n    for(i = 0; i < nodeLen; i++) {\n        node = this[i]\n        \n        if(!Q.isDomNode(node)) {\n            continue\n        }\n        \n        node[key] = value\n    }\n}\n\nlet _prop = function(key, value) {\n    if(Q.isUndefined(value)) {\n        return _getProp.call(this, key)\n    }\n\n    return _setProp.call(this, key, value)\n}\n\n// prop负责处理源生属性\n// var elem = document.getElementId('id); var name = elem.name; var className = elem.className\n// 以上都属于源生属性，都可以这么设置\n// 返回第一个匹配元素的属性\n// 支持的参数类型：\n// 1： key-value\n// 2： object: {key1: value1, key2: value2}\nlet prop = access(_prop);\n\n// 扩展到对象实例\nInner.prototype.extend({\n    prop\n})","'use strict';\n\nimport Q, {Inner} from '../../core' \n\nlet domUtil = {\n    isDomNode: function(node) {\n        let type = node && node.nodeType\n    \n        if(Q.isNumeric(type) === false || type === 2 || type === 3 || type === 8) {\n            return false\n        }\n    \n        return true\n    },\n    isElementNode: function(node) {\n        let type = node && node.nodeType\n\n        return type === 1\n    },\n    nodeName: function(node) {\n        return node.nodeName.toLowerCase()\n    }\n}\n\nQ.extend(domUtil)","import Q, {Inner} from '../../core'\nimport access from './dom-access'\nimport support from '../../tools/support'\nimport utils from '../../tools/utils'\n\nQ.valPresets = {\n    option: {\n        get: function(node) {\n            let val = Q(node).attr('value')\n\n            return val != null ? val : utils.stripAndCollapse(val)\n        }\n    },\n    select: {\n        get: function(node) {\n            // select-one / select-multiple\n            let options = node.options\n            let selected = node.selectedIndex\n            let isSingleSelect = node.type === 'select-one'\n            let ret = isSingleSelect ? null : []\n            let max = isSingleSelect ? selected + 1 : options.length\n            let i, option, value, isDisabled, parent\n\n            // 根据所选项缩小循环次数\n            // 如果是多选则从第一个选中的index开始直到结尾\n            if(selected < 0) {\n                i = max\n            } else {\n                i = isSingleSelect ? selected : 0\n            }\n\n            for(; i < max; i++) {\n                option = options[i]\n\n                // 找到match\n                if(options.selected || i === selected) {\n                    parent = option.parentNode\n                    isDisabled = option.disabled || Q.nodeName(parent) === 'optgroup' && parent.disabled\n                    \n                    // 如果option是disabled或者他的父元素是optgroup且disabled的，不返回\n                    if(isDisabled === false) {\n                        value = Q(option).val()\n\n                        if(isSingleSelect) {\n                            return vlaue\n                        }\n        \n                        ret.push(value)\n                    }\n                }\n            }\n\n            return ret\n        },\n        set: function(node, value) {\n            // select可以单选、多选\n            // value可以是字符串，也可以是数组\n            // 原理：挨个设置option.selected，如果没有匹配值，设置select.selectedIndex = -1\n\n            let hasMatch = false\n            let options = node.options\n            let values = Q.makeArray(value)\n            let len = options.length\n            let i = 0, option\n\n            for(; i < len; i++) {\n                option = options[i];\n\n                if(option.selected = values.indexOf(Q.valPresets.option.get(option)) > -1) {\n                    hasMatch = true\n                }\n            }\n\n            if(hasMatch === false) {\n                node.selectedIndex = -1\n            }\n\n            return values\n        }\n    }\n};\n\n['radio', 'checkbox'].forEach(tag => {\n    Q.valPresets[this] = {\n        set: function(node, value) {\n            if(Q.isArray(value)) {\n                return (node.checked = value.indexOf(Q(node).val()) > -1)\n            }\n        }\n    }\n\n    // 不支持标准check的时候\n    if(!support.checkOn) {\n        Q.valPresets[this].get = function(node) {\n            return node.getAttribute('value') === null ? 'on' : node.value\n        }\n    }\n})\n\nlet _getPreset = function(node) {\n    return Q.valPresets[node.type] || Q.valPresets[node.nodeName.toLowerCase()]\n}\n\n// 支持传入原始类型（string，number, boolean)\n// 或者function(index, oldValue)\nlet _setVal = function(value) {\n    let i = 0\n    let len = this.length\n    let isFunction = Q.isFunction(value)\n    let node, preset, val\n\n    if(!isFunction && !Q.isBaseType(value)) {\n        return\n    }\n\n    for(i; i < len; i++) {\n        node = this[i]\n\n        // 能被赋值的dom只能是elementNode\n        if(node.nodeType !== 1) {\n            continue\n        }\n\n        val = isFunction ? value.call(node, i, Q(node).val()) : value\n        \n        if(val == null) {\n            val = ''\n        } else if(Q.isNumeric(value)) {\n            // 转为字符串\n            val += ''\n        } else if(Q.isArray(value)) {\n            // 可以直接对input、textarea设置数组\n            // 这里处理了下数组中存在的null值问题，同时将数组值转为string\n            val = value.map(v => v == null ? '' : v + '')\n        }\n\n        preset = _getPreset(node)\n\n        if(!preset || !preset.set || (preset.set(node, val) === undefined)) {\n            node.value = val\n        }\n    }\n}\n\nlet _getVal = function() {\n    let node = this[0]\n    let preset\n    let ret\n\n    if(node) {\n        preset = _getPreset(node)\n        \n        if(preset && preset.get) {\n            ret = preset.get(node, 'value')\n\n            if(ret !== undefined) {\n                return ret\n            }\n        }\n\n        ret = node.value\n\n        if(typeof ret === 'string') {\n            return utils.removeReturn(ret)\n        }\n\n        return ret == null ? '' : ret\n    }\n\n    return\n}\n\n// 给input、textarea、select元素取值、赋值\n// 该方法不支持chainable\nlet val = function(value) {\n    if(Q.isUndefined(value)) {\n        return _getVal.call(this)\n    }\n\n    return _setVal.call(this, value)\n}\n\n// 扩展到对象实例\nInner.prototype.extend({\n    val\n})","require('./core')\nrequire('./tools/index')\nrequire('./modules/dom-index')","'use strict';\n\nimport Q from '../core'\nimport {toString, hasOwn, getProto} from './meta'\n\nQ.class2type = {};\n\n// Populate the class2type map\n['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Object', 'Error', 'Symbol', 'WeakMap'].forEach(cls => {\n\tQ.class2type[ '[object ' + cls + ']' ] = cls.toLowerCase();\n});\n\nlet base = {\n    isWindow: function(obj) {\n        return obj != null && obj === obj.window\n    },\n    isNumeric: function(obj) {\n        let type = typeof obj\n\n        return type === 'number' || (type === 'string' && !isNaN(obj - obj)) \n    },\n    isString: function(obj) {\n        return typeof obj === 'string'\n    },\n    isValidString: function(obj) {\n        return typeof obj === 'string' && obj.length\n    },\n    isBoolean: function(obj) {\n        return typeof obj === 'boolean'\n    },\n    isBaseType: function(obj) {\n        return Q.isNumeric(obj) || Q.isString(obj) || Q.isBoolean(obj)\n    },\n    isArray: function(arr) {\n        if(Array.isArray) {\n            return Array.isArray(arr)\n        }\n\n        return arr && toString.call(arr) === '[object Array]'\n    },    \n    isFunction: function(func) {\n        return typeof func === 'function'\n    },\n    isObject: function(obj) {\n        return obj && toString.call(obj) === '[object Object]'\n    },\n    isUndefined: function(obj) {\n        return typeof obj === 'undefined'\n    },\n    // 检查是否是空对象\n    isEmptyObject: function(obj) {\n        let ret = true\n\n        if(!Q.isObject(obj)) {\n            return false\n        }\n\n        for(let key in obj) {\n            if(hasOwn.call(obj, key)) {\n                ret = false\n                break\n            }\n        }\n\n        return ret\n    },\n    // 检查是否是纯对象\n    isPlainObject: function(obj) {\n        let ret = false\n        let constructor\n\n        try {\n            let proto = getProto(obj)\n            // Object with no prototype. Object.create(null) are plain.\n            if(!proto) {\n                return true\n            }\n\n            constructor = hasOwn.call(proto, 'constructor') && proto.constructor\n            return typeof constructor === 'function' && constructor === Object.prototype.constructor \n        } catch(err) {}\n        \n        return ret\n    },\n    // 判断是否是一个类数组对象\n    // 规则：有length属性，要么是0，如果不是0 length属性应该是数字\n    // 且len - 1肯定应该存在\n    // 不是function或者window对象\n    // 不能直接判断isArray，说了是类array，肯定不能只是array\n    // Q对象是类数组对象\n    isArrayLike: function(obj) {\n        if(obj instanceof Q) {\n            return true\n        }\n\n        let len = !!obj && hasOwn.call(obj, 'length') && obj.length\n        let type = Q.type(obj);\n\n        if(Q.isFunction(obj) || Q.isWindow(obj)) {\n            return false\n        }\n\n        return type === 'array' || len === 0 || typeof len === 'number' && len > 0 && obj[len - 1];\n    },\n    // 获取一个对象的类型名称(小写），比如regexp\n    type: function(obj) {\n        if(obj == null) {\n            return obj + ''\n        }\n\n        let t = typeof obj;\n        let ret = t === 'object' || t === 'function' ? Q.class2type[toString.call(obj)] || 'object' : t\n\n        return ret\n    }\n}\n\nlet helper = {\n    // merge两个数组或者类数组\n    merge: function(base, extend) {\n        let len = extend.length || 0\n        let bi = base.length || 0\n        let ei = 0\n\n        for(; ei < len; ei++) {\n            base[bi++] = extend[ei]\n        }\n\n        base.length = bi\n        return base\n    },\n    makeArray: function(arr, results) {\n        let rets = results || []\n\n        if(arr != null) {\n            // 使用object包装一下，否则类似一个字符串不能使用（ 'length' in obj ) 来判断\n            if(Q.isArrayLike(arr)) {\n                Q.merge(rets, typeof arr === 'string' ? [arr] : arr)\n            } else {\n                rets.push(arr)\n            }\n        }\n\n        return rets;\n    },\n    each: function(obj, func) {\n        let item, ret\n\n        if(!Q.isFunction(func)) {\n            return\n        }\n\n        if(Q.isObject(obj)) {\n            for(let key in obj) {\n                if(ret !== false) {\n                    if(hasOwn(obj, key)) {\n                        item = obj[key]\n                        ret = func.call(item, key, obj)\n                    }\n                }                \n            }\n        } else if(Q.isArrayLike(func)) {\n            for(let i = 0; i < obj.length; i++) {\n                item = obj[i]\n\n                ret = func.call(item, i, obj)\n                \n                if(ret === false) {\n                    break\n                }\n            }\n        }\n    }\n}\n\nQ.extend(base)\nQ.extend(helper)\n\nexport default base","/*\n * @Author: baotong.wang \n * @Date: 2017-08-21 15:26:49 \n * @Last Modified by: baotong.wang\n * @Last Modified time: 2017-08-23 15:01:56\n * @Description: 实现对象的深浅拷贝\n * @Dependence: qdj.js \n */\n\nimport Q, {Inner} from '../core'\n\n// isDeep: 是否深拷贝\nvar extend = function (isDeep) {\n    var args, \n        base = arguments[0], \n        index = 1, \n        length = arguments.length\n\n    if (typeof isDeep === 'boolean') {\n        index++\n        base = arguments[1]\n    }\n\n    // 处理base不等于对象的场景，处理异常\n    if (toString.call(base) !== '[object Object]' && typeof base !== 'function') {\n        base = {}\n    }\n\n    // 如果传入的参数比预期的少一个，那么表示扩展当前对象\n    if (index === length) {\n        base = this\n        index--\n    }\n\n    for(; index < length; index++) {\n        _extend(base, arguments[index])\n    }\n\n    return base;\n}\n\nvar _extend = function (base, obj, isDeep) {\n    var property;\n    var baseProperty;\n    var basePropertyType;\n\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            property = obj[key];\n            baseProperty = base[key];\n\n            if (baseProperty === property) {\n                continue;\n            }\n\n            if (!isDeep) {\n                base[key] = obj[key];\n                continue;\n            }\n\n            basePropertyType = typeof baseProperty\n\n            switch (typeof property) {\n                case 'object':\n                    baseProperty = basePropertyType === 'object' ? baseProperty : {};\n                    _extend(baseProperty, property, isDeep);\n                    break;\n                case 'array':\n                    baseProperty = basePropertyType === 'array' ? baseProperty : [];\n                    _extend(baseProperty, property, isDeep);\n                    break;\n                default:\n                    base[key] = obj[key];\n                    break;\n            }\n        }\n    }\n\n    return base;\n}\n\nQ.extend = Inner.prototype.extend = extend","// extend需要先调用\nrequire('./extend')\nrequire('./base')","const obj = {}\nconst arr = []\nconst string = 'baotong.wang'\nconst toString = Object.prototype.toString\nconst hasOwn = obj.hasOwnProperty\nconst getProto = Object.getPrototypeOf\nconst objProto = getProto(obj)\nconst objectFunctionString = objProto.constructor.toString()\n\nexport {\n    toString,\n    hasOwn,\n    getProto\n}\n","let support = {}\n\nsupport.createHTMLDocument = (() => {\n    let body = document.implementation.createHTMLDocument('').body\n\n    body.innerHTML = '<form></form><form></form>'\n    return body.childNodes.length === 2\n})\n\n(function() {\n    var input = document.createElement( \"input\" ),\n        select = document.createElement( \"select\" ),\n        opt = select.appendChild( document.createElement( \"option\" ) );\n\n    input.type = \"checkbox\";\n\n    // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n    support.checkOn = input.value !== \"\";\n\n    // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n    support.optSelected = opt.selected;\n\n    // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n    input = document.createElement( \"input\" );\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n\n    support.weakMap = Q.class2type[Q.type(window.WeakMap)] === 'weakmap'\n})\n\nexport default support","const patterns = {\n    // 匹配非accii 空格，其他空格应该被记入value\n    // https://infra.spec.whatwg.org/#ascii-whitespace\n\t// \\x20表示空格；\\t tab制表符； \\r 回车CR \\n 换行LF； \\f 换页 FF\n    rnotHtmlWhite: /[^\\x20\\t\\r\\n\\f]+/g,\n    rreturn: /\\r/g\n}\n\nconst utils = {\n    stripAndCollapse: function(value) {\n        let match = value.match(patterns.rnotHtmlWhite) || []\n        return match.join(' ')\n    },\n    removeReturn: function(value) {\n        return value.replace(patterns.rreturn, '')\n    }\n}\n\nexport default utils"]}